
plugins {
	id 'de.undercouch.download' version '1.2'
	id 'com.jfrog.bintray' version '1.2'
}

apply plugin: 'base'
apply plugin: 'maven-publish'

import de.undercouch.gradle.tasks.download.Download

task mkdirs << {
    file("$buildDir/files/i386").mkdirs()
    file("$buildDir/files/amd64").mkdirs()
}

task downloadArchive32(type: Download) {
    src "https://storage.googleapis.com/golang/go1.4.2.windows-386.zip"
    dest buildDir
}

task extractArchive32(type: Copy, dependsOn: downloadArchive32) {
	from { zipTree("$buildDir/${project.name}${version}.windows-386.zip") }
	into "$buildDir/files/i386"
}
task renameDirectory32() << {
    file("$buildDir/files/i386/go").renameTo(file("$buildDir/files/i386/${project.name}-${version}"))
}
extractArchive32.finalizedBy renameDirectory32

task customizePackage32(type: Copy, dependsOn: extractArchive32) {
    from "files"
    into "$buildDir/files/i386"
}

task buildPackage32(type: Jar, dependsOn: customizePackage32) {
	baseName project.name
	version version
	extension 'jar'
	classifier 'i386'
	destinationDir buildDir	
	from "$buildDir/files/i386"
}

task downloadArchive64(type: Download) {
    src "https://storage.googleapis.com/golang/go1.4.2.windows-amd64.zip"
    dest buildDir
}

task extractArchive64(type: Copy, dependsOn: downloadArchive64) {
	from { zipTree("$buildDir/${project.name}${version}.windows-amd64.zip") }
	into "$buildDir/files/amd64"
}
task renameDirectory64() << {
    file("$buildDir/files/amd64/go").renameTo(file("$buildDir/files/amd64/${project.name}-${version}"))
}
extractArchive64.finalizedBy renameDirectory64

task customizePackage64(type: Copy, dependsOn: extractArchive64) {
    from "files"
    into "$buildDir/files/amd64"
}

task buildPackage64(type: Jar, dependsOn: customizePackage64) {
	baseName project.name
	version version
	extension 'jar'
	classifier 'amd64'
	destinationDir buildDir	
	from "$buildDir/files/amd64"
}

task buildPackage(dependsOn: ['buildPackage32', 'buildPackage64']) {
}

publishing {
    publications {
		go142(MavenPublication) {
			artifact buildPackage32
			artifact buildPackage64
		}
    }
	repositories {
		// set the properties via -P to publish to your company repo
		maven {  			
			url = project.hasProperty('nexusUrl') ? project.nexusUrl : ''
			credentials {
				username = project.hasProperty('nexusUsername') ? project.nexusUsername : ''
				password = project.hasProperty('nexusPassword') ? project.nexusPassword : ''
			}			
		}
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['go142']
	publish = true
	dryRun = false
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = ${project.description}
        licenses = ['BSD']
        labels = ['go', 'seu-as-code', 'package']
		websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true
        
        version {
            name = project.version
			desc = "${project.description} ${project.version}"
			released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
			
			mavenCentralSync {
				sync = false
			}
        }	
    }
}