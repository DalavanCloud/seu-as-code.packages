/*
 *    Copyright (C) 2015 QAware GmbH
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id "de.undercouch.download" version "3.2.0"
    id 'com.jfrog.bintray' version '1.2'
}

apply plugin: 'base'
apply plugin: 'maven-publish'

import de.undercouch.gradle.tasks.download.Download

task buildPackage(dependsOn: ['buildPackageWin']) {}

task downloadArchiveWin(type: Download) {
    src "https://github.com/ojdkbuild/ojdkbuild/releases/download/${version}/java-1.8.0-openjdk-${version}.${buildVersion}.ojdkbuild.windows.x86_64.zip"
    dest buildDir
}

task extractArchiveWin(type: Copy, dependsOn: downloadArchiveWin) {
    from { zipTree("$buildDir/java-1.8.0-openjdk-${version}.${buildVersion}.ojdkbuild.windows.x86_64.zip") }
    into "$buildDir/win"
    includeEmptyDirs = false
    eachFile { details ->
        def targetPath = (details.path.replace("java-1.8.0-openjdk-${version}.${buildVersion}.ojdkbuild.windows.x86_64/", 'openjdk8/'))
        details.path = targetPath
    }
}

task customizePackageWin(type: Copy, dependsOn: extractArchiveWin) {
    from "files"
    into "$buildDir/win"
}

task buildPackageWin(type: Jar, dependsOn: customizePackageWin) {
    baseName project.name
    version version
    extension 'jar'
    classifier 'win'
    destinationDir buildDir
    from "$buildDir/win"
    from("files/") {
        include '*.cmd'
        include '*.bat'
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            artifact buildPackageWin
        }
    }
    repositories {
        // set the properties via -P to publish to your company repo
        maven {
            url = project.hasProperty('nexusUrl') ? project.nexusUrl : ''
            credentials {
                username = project.hasProperty('nexusUsername') ? project.nexusUsername : ''
                password = project.hasProperty('nexusPassword') ? project.nexusPassword : ''
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['maven']
    publish = true
    dryRun = false
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['GPL-2.0+CE']
        labels = ['openjdk', 'seu-as-code', 'package']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")

            mavenCentralSync {
                sync = false
            }
        }
    }
}
